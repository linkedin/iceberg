#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: "Java CI"
on:
  push:
    branches: ['li-0.14.x']
    tags-ignore: [v*] # release tags are autogenerated after a successful CI, no need to run CI against them
  pull_request:
    branches: ['**']
    paths-ignore:
    - '.github/workflows/python-ci.yml'
    - '.github/workflows/spark-ci.yml'
    - '.github/workflows/flink-ci.yml'
    - '.github/workflows/hive-ci.yml'
    - '.gitignore'
    - 'dev/**'
    - 'python/**'
    - 'python_legacy/**'
    - 'docs/**'
    - 'open-api/**'
    - 'format/**'
    - '.gitattributes'
    - 'README.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
    - 'NOTICE'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"

    steps:

      - name: 1. Check out code
        uses: actions/checkout@v2 # https://github.com/actions/checkout
        with:
          fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci

      - name: 2. Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: 3. Perform build
        run: ./gradlew build -DflinkVersions=1.13,1.14,1.15 -DsparkVersions=2.4,3.1 -DhiveVersions=2,3 build -x javadoc

      - name: 4. Perform release
        # Release job, only for pushes to the main development branch
        if: github.event_name == 'push'
          && github.ref == 'refs/heads/li-0.11.x'
          && github.repository == 'linkedin/iceberg'
          && !contains(toJSON(github.event.commits.*.message), '[skip release]')

        run: ./gradlew githubRelease publishToSonatype closeAndReleaseStagingRepository
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONATYPE_USER: ${{secrets.SONATYPE_USER}}
          SONATYPE_PWD: ${{secrets.SONATYPE_PWD}}
          PGP_KEY: ${{secrets.PGP_KEY}}
          PGP_PWD: ${{secrets.PGP_PWD}}
  
  core-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        jvm: [ 8, 11 ]
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ matrix.jvm }}
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      - run: ./gradlew check -DsparkVersions= -DhiveVersions= -DflinkVersions= -Pquick=true -x javadoc
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test logs
          path: |
            **/build/testlogs

  build-checks:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 8
    - run: ./gradlew -DflinkVersions=1.13,1.14,1.15 -DsparkVersions=2.4,3.1 -DhiveVersions=2,3 build -x test -x javadoc -x integrationTest

  build-javadoc:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 8
    - run: ./gradlew -Pquick=true javadoc
